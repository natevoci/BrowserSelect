name: Build Branches

on:
  push:
    branches:
      - '**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Branch name
        run: |
          echo "BRANCH_NAME=$(echo $env:GITHUB_REF | sed -e "s|^refs/heads/||" )" >> $env:GITHUB_ENV
          echo "BRANCH_NAME_NO_SLASHES=$(echo $env:GITHUB_REF | sed -e "s|^refs/heads/||" | sed -e "s|/|_|" )" >> $env:GITHUB_ENV
      - name: Display branch name
        run: |
          echo Branch name: ${{ env.BRANCH_NAME }}
          echo Branch name without slashes: ${{ env.BRANCH_NAME_NO_SLASHES }}

      # Read version number from assemblyinfo.cs
      - name: Get Version
        run: |
          (cat ./BrowserSelect/Properties/AssemblyInfo.cs | sls "AssemblyFileVersion") -match "AssemblyFileVersion\(`"([0-9]+\.[0-9]+\.[0-9]+)"
          echo "VERSION=$($matches[1])"
          echo "VERSION=$($matches[1])" >> $env:GITHUB_ENV
      - name: Display version
        run: echo "Version is ${{ env.VERSION }}"

      # Update app.config
      - name: Replace GithubRepo name
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: natevoci/BrowserSelect
          replace: ${{ github.repository }}
          include: BrowserSelect/app.config

      # Build solution
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.3.1
      - name: Build the application
        run: msbuild BrowserSelect.sln /t:Build /p:Configuration=Release

      # Build installer
      - name: Create nsis installer
        uses: joncloud/makensis-action@publish
        with:
          script-file: BrowserSelect/installer.nsi
      - name: Rename installer
        run: mv BrowserSelect/BrowserSelect.exe BrowserSelect/BrowserSelectInstaller-${{ env.VERSION }}.exe

      # Create Zip
      - name: Zip Release
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: BrowserSelect-${{ env.VERSION }}.zip
          directory: BrowserSelect/bin/Release
          exclusions: '*.pdb'

      # Create Release
      - name: Create or Update tag
        run: |
          git tag -f ${{ env.VERSION }}_${{ env.BRANCH_NAME_NO_SLASHES }}_Release
          git push -f origin ${{ env.VERSION }}_${{ env.BRANCH_NAME_NO_SLASHES }}_Release

      - name: Upload Release
        uses: ncipollo/release-action@main
        with:
          name: Release ${{ env.VERSION }}
          tag: ${{ env.VERSION }}_${{ env.BRANCH_NAME_NO_SLASHES }}_Release
          allowUpdates: true
          prerelease: false
          removeArtifacts: true
          replacesArtifacts: true
          artifactErrorsFailBuild: true
          artifacts: "BrowserSelect/BrowserSelectInstaller-${{ env.VERSION }}.exe,BrowserSelect/bin/Release/BrowserSelect-${{ env.VERSION }}.zip"
          artifactContentType: application/zip
          token: ${{secrets.GITHUB_TOKEN}}
